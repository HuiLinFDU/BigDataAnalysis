{"cells":[{"cell_type":"markdown","metadata":{"id":"GTwDFnjHMk25"},"source":["## Spark Tutorial\n","\n","In this tutorial, you will learn how to use [Apache Spark](https://spark.apache.org) in local mode on a Colab enviroment.\n","\n","Credits to [Tiziano Piccardi](http://piccardi.me/) for his Spark Tutorial used in the Applied Data Analysis class at EPFL.\n"]},{"cell_type":"markdown","metadata":{"id":"eXQzA01OS_yQ"},"source":["### Setup"]},{"cell_type":"markdown","metadata":{"id":"AbYZoVVWOZA5"},"source":["Let's set up Spark on your Colab environment.  Run the cell below!"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"dhzk3GE6S9RC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739507411123,"user_tz":480,"elapsed":21434,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"3802dcbc-c451-46ec-c8e7-970b2b7c8360"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: pyspark in /usr/local/lib/python3.11/dist-packages (3.5.4)\n","Requirement already satisfied: py4j==0.10.9.7 in /usr/local/lib/python3.11/dist-packages (from pyspark) (0.10.9.7)\n","The following additional packages will be installed:\n","  libxtst6 openjdk-8-jre-headless\n","Suggested packages:\n","  openjdk-8-demo openjdk-8-source libnss-mdns fonts-dejavu-extra fonts-nanum fonts-ipafont-gothic\n","  fonts-ipafont-mincho fonts-wqy-microhei fonts-wqy-zenhei fonts-indic\n","The following NEW packages will be installed:\n","  libxtst6 openjdk-8-jdk-headless openjdk-8-jre-headless\n","0 upgraded, 3 newly installed, 0 to remove and 20 not upgraded.\n","Need to get 39.7 MB of archives.\n","After this operation, 144 MB of additional disk space will be used.\n","Selecting previously unselected package libxtst6:amd64.\n","(Reading database ... 124926 files and directories currently installed.)\n","Preparing to unpack .../libxtst6_2%3a1.2.3-1build4_amd64.deb ...\n","Unpacking libxtst6:amd64 (2:1.2.3-1build4) ...\n","Selecting previously unselected package openjdk-8-jre-headless:amd64.\n","Preparing to unpack .../openjdk-8-jre-headless_8u442-b06~us1-0ubuntu1~22.04_amd64.deb ...\n","Unpacking openjdk-8-jre-headless:amd64 (8u442-b06~us1-0ubuntu1~22.04) ...\n","Selecting previously unselected package openjdk-8-jdk-headless:amd64.\n","Preparing to unpack .../openjdk-8-jdk-headless_8u442-b06~us1-0ubuntu1~22.04_amd64.deb ...\n","Unpacking openjdk-8-jdk-headless:amd64 (8u442-b06~us1-0ubuntu1~22.04) ...\n","Setting up libxtst6:amd64 (2:1.2.3-1build4) ...\n","Setting up openjdk-8-jre-headless:amd64 (8u442-b06~us1-0ubuntu1~22.04) ...\n","update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/orbd to provide /usr/bin/orbd (orbd) in auto mode\n","update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/servertool to provide /usr/bin/servertool (servertool) in auto mode\n","update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/tnameserv to provide /usr/bin/tnameserv (tnameserv) in auto mode\n","Setting up openjdk-8-jdk-headless:amd64 (8u442-b06~us1-0ubuntu1~22.04) ...\n","update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/clhsdb to provide /usr/bin/clhsdb (clhsdb) in auto mode\n","update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/extcheck to provide /usr/bin/extcheck (extcheck) in auto mode\n","update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/hsdb to provide /usr/bin/hsdb (hsdb) in auto mode\n","update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/idlj to provide /usr/bin/idlj (idlj) in auto mode\n","update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/javah to provide /usr/bin/javah (javah) in auto mode\n","update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/jhat to provide /usr/bin/jhat (jhat) in auto mode\n","update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/jsadebugd to provide /usr/bin/jsadebugd (jsadebugd) in auto mode\n","update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/native2ascii to provide /usr/bin/native2ascii (native2ascii) in auto mode\n","update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/schemagen to provide /usr/bin/schemagen (schemagen) in auto mode\n","update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/wsgen to provide /usr/bin/wsgen (wsgen) in auto mode\n","update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/wsimport to provide /usr/bin/wsimport (wsimport) in auto mode\n","update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/xjc to provide /usr/bin/xjc (xjc) in auto mode\n","Processing triggers for libc-bin (2.35-0ubuntu3.8) ...\n","/sbin/ldconfig.real: /usr/local/lib/libtcm_debug.so.1 is not a symbolic link\n","\n","/sbin/ldconfig.real: /usr/local/lib/libhwloc.so.15 is not a symbolic link\n","\n","/sbin/ldconfig.real: /usr/local/lib/libtbbbind.so.3 is not a symbolic link\n","\n","/sbin/ldconfig.real: /usr/local/lib/libur_loader.so.0 is not a symbolic link\n","\n","/sbin/ldconfig.real: /usr/local/lib/libur_adapter_level_zero.so.0 is not a symbolic link\n","\n","/sbin/ldconfig.real: /usr/local/lib/libtbbmalloc.so.2 is not a symbolic link\n","\n","/sbin/ldconfig.real: /usr/local/lib/libumf.so.0 is not a symbolic link\n","\n","/sbin/ldconfig.real: /usr/local/lib/libur_adapter_opencl.so.0 is not a symbolic link\n","\n","/sbin/ldconfig.real: /usr/local/lib/libtcm.so.1 is not a symbolic link\n","\n","/sbin/ldconfig.real: /usr/local/lib/libtbb.so.12 is not a symbolic link\n","\n","/sbin/ldconfig.real: /usr/local/lib/libtbbbind_2_5.so.3 is not a symbolic link\n","\n","/sbin/ldconfig.real: /usr/local/lib/libtbbbind_2_0.so.3 is not a symbolic link\n","\n","/sbin/ldconfig.real: /usr/local/lib/libtbbmalloc_proxy.so.2 is not a symbolic link\n","\n"]}],"source":["!pip install pyspark\n","!pip install -U -q PyDrive\n","!apt install openjdk-8-jdk-headless -qq"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"XtJVQkDhZEi9","executionInfo":{"status":"ok","timestamp":1739507529953,"user_tz":480,"elapsed":136,"user":{"displayName":"林辉","userId":"00815086233424508369"}}},"outputs":[],"source":["import os\n","os.environ[\"JAVA_HOME\"] = \"/usr/lib/jvm/java-8-openjdk-amd64\""]},{"cell_type":"markdown","metadata":{"id":"ctU1dYjfOif7"},"source":["Now, we authenticate a Google Drive client to download the file we will be processing in our Spark job.\n","\n","**Make sure to follow the interactive instructions.**"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"1dfnX7IAOkvH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739507548156,"user_tz":480,"elapsed":15626,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"bf96e530-bcd4-481f-e860-fd2529ffacb7"},"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:root:pydrive is deprecated and no longer maintained. We recommend that you migrate your projects to pydrive2, the maintained fork of pydrive\n"]}],"source":["from pydrive.auth import GoogleAuth\n","from pydrive.drive import GoogleDrive\n","from google.colab import auth\n","from oauth2client.client import GoogleCredentials\n","\n","# Authenticate and create the PyDrive client\n","auth.authenticate_user()\n","gauth = GoogleAuth()\n","gauth.credentials = GoogleCredentials.get_application_default()\n","drive = GoogleDrive(gauth)"]},{"cell_type":"code","execution_count":4,"metadata":{"id":"UF5nuSdyTJpc","executionInfo":{"status":"ok","timestamp":1739507562473,"user_tz":480,"elapsed":8751,"user":{"displayName":"林辉","userId":"00815086233424508369"}}},"outputs":[],"source":["id='1L6pCQkldvdBoaEhRFzL0VnrggEFvqON4'\n","downloaded = drive.CreateFile({'id': id})\n","downloaded.GetContentFile('Bombing_Operations.json.gz')\n","\n","id='14dyBmcTBA32uXPxDbqr0bFDIzGxMTWwl'\n","downloaded = drive.CreateFile({'id': id})\n","downloaded.GetContentFile('Aircraft_Glossary.json.gz')"]},{"cell_type":"code","source":["!ls -l"],"metadata":{"id":"RyvjAdFvSAVg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739507566990,"user_tz":480,"elapsed":232,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"17293f3b-9443-443f-fd12-65477dfe56a6"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["total 65276\n","-rw-r--r-- 1 root root     2005 Feb 14 04:32 Aircraft_Glossary.json.gz\n","-rw-r--r-- 1 root root 66832932 Feb 14 04:32 Bombing_Operations.json.gz\n","drwxr-xr-x 1 root root     4096 Feb 12 14:21 sample_data\n"]}]},{"cell_type":"markdown","metadata":{"id":"wA49WWqmO5rR"},"source":["If you executed the cells above, you should be able to see the files *Bombing_Operations.json.gz* and *Aircraft_Glossary.json.gz* under the \"Files\" tab on the left panel."]},{"cell_type":"code","execution_count":6,"metadata":{"id":"xgQaRx6rSaf9","executionInfo":{"status":"ok","timestamp":1739507583592,"user_tz":480,"elapsed":904,"user":{"displayName":"林辉","userId":"00815086233424508369"}}},"outputs":[],"source":["# Let's import the libraries we will need\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","import pyspark\n","from pyspark.sql import *\n","from pyspark.sql.functions import *\n","from pyspark import SparkContext, SparkConf"]},{"cell_type":"markdown","metadata":{"id":"uUD5XpD_SagA"},"source":["Let's initialize the Spark context.\n"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"7ft3VivrSagB","executionInfo":{"status":"ok","timestamp":1739507593424,"user_tz":480,"elapsed":7283,"user":{"displayName":"林辉","userId":"00815086233424508369"}}},"outputs":[],"source":["# create the session\n","conf = SparkConf().set(\"spark.ui.port\", \"4050\")\n","\n","# create the context\n","sc = pyspark.SparkContext(conf=conf)\n","spark = SparkSession.builder.getOrCreate()"]},{"cell_type":"markdown","metadata":{"id":"-n20ixkgSagD"},"source":["You can easily check the current version and get the link of the web interface. In the Spark UI, you can monitor the progress of your job and debug the performance bottlenecks (if your Colab is running with a **local runtime**)."]},{"cell_type":"code","execution_count":8,"metadata":{"id":"Fl4RHbqFSagE","colab":{"base_uri":"https://localhost:8080/","height":219},"executionInfo":{"status":"ok","timestamp":1739507598514,"user_tz":480,"elapsed":2288,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"ecc62141-12f0-454a-8533-3f0f6844cde9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<pyspark.sql.session.SparkSession at 0x7a85305814d0>"],"text/html":["\n","            <div>\n","                <p><b>SparkSession - in-memory</b></p>\n","                \n","        <div>\n","            <p><b>SparkContext</b></p>\n","\n","            <p><a href=\"http://adf9f95ccfe5:4050\">Spark UI</a></p>\n","\n","            <dl>\n","              <dt>Version</dt>\n","                <dd><code>v3.5.4</code></dd>\n","              <dt>Master</dt>\n","                <dd><code>local[*]</code></dd>\n","              <dt>AppName</dt>\n","                <dd><code>pyspark-shell</code></dd>\n","            </dl>\n","        </div>\n","        \n","            </div>\n","        "]},"metadata":{},"execution_count":8}],"source":["spark"]},{"cell_type":"markdown","metadata":{"id":"gewv-lKMSagI"},"source":["# Vietnam War\n","\n","**Pres. Johnson**: _What do you think about this Vietnam thing? I’d like to hear you talk a little bit._\n","\n","**Sen. Russell**: _Well, frankly, Mr. President, it’s the damn worse mess that I ever saw, and I don’t like to brag and I never have been right many times in my life, but I knew that we were going to get into this sort of mess when we went in there._\n","\n","May 27, 1964\n","\n","![banner](https://raw.githubusercontent.com/epfl-ada/2019/c17af0d3c73f11cb083717b7408fedd86245dc4d/Tutorials/04%20-%20Scaling%20Up/img/banner.jpg)"]},{"cell_type":"markdown","metadata":{"id":"skjUv84VSagJ"},"source":["----\n","\n","The Vietnam War, also known as the Second Indochina War, and in Vietnam as the Resistance War Against America or simply the American War, was a conflict that occurred in Vietnam, Laos, and Cambodia from 1 November 1955 to the fall of Saigon on 30 April 1975. It was the second of the Indochina Wars and was officially fought between North Vietnam and the government of South Vietnam.\n","\n","**The dataset describes all the air force operation in during the Vietnam War.**\n","\n","**Bombing_Operations** [Get the dataset here](https://drive.google.com/a/epfl.ch/file/d/1L6pCQkldvdBoaEhRFzL0VnrggEFvqON4/view?usp=sharing)\n","\n","- AirCraft: _Aircraft model (example: EC-47)_\n","- ContryFlyingMission: _Country_\n","- MissionDate: _Date of the mission_\n","- OperationSupported: _Supported War operation_ (example: [Operation Rolling Thunder](https://en.wikipedia.org/wiki/Operation_Rolling_Thunder))\n","- PeriodOfDay: _Day or night_\n","- TakeoffLocation: _Take off airport_\n","- TimeOnTarget\n","- WeaponType\n","- WeaponsLoadedWeight\n","\n","**Aircraft_Glossary** [Get the dataset here](https://drive.google.com/a/epfl.ch/file/d/14dyBmcTBA32uXPxDbqr0bFDIzGxMTWwl/view?usp=sharing)\n","\n","- AirCraft: _Aircraft model (example: EC-47)_\n","- AirCraftName\n","- AirCraftType\n","\n","**Dataset Information:**\n","\n","THOR is a painstakingly cultivated database of historic aerial bombings from World War I through Vietnam. THOR has already proven useful in finding unexploded ordnance in Southeast Asia and improving Air Force combat tactics:\n","https://www.kaggle.com/usaf/vietnam-war-bombing-operations"]},{"cell_type":"markdown","metadata":{"id":"VSWoULeWSagJ"},"source":["Load the datasets:"]},{"cell_type":"code","execution_count":9,"metadata":{"id":"XLyVPuLXSagK","executionInfo":{"status":"ok","timestamp":1739507629631,"user_tz":480,"elapsed":24999,"user":{"displayName":"林辉","userId":"00815086233424508369"}}},"outputs":[],"source":["Bombing_Operations = spark.read.json(\"Bombing_Operations.json.gz\")\n","Aircraft_Glossary = spark.read.json(\"Aircraft_Glossary.json.gz\")"]},{"cell_type":"markdown","metadata":{"id":"MP2JmCeoSagM"},"source":["Check the schema:"]},{"cell_type":"code","execution_count":10,"metadata":{"id":"KpUT8viNSagM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739507643018,"user_tz":480,"elapsed":148,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"87cde05a-55fa-457c-993e-05ff85b84cca"},"outputs":[{"output_type":"stream","name":"stdout","text":["root\n"," |-- AirCraft: string (nullable = true)\n"," |-- ContryFlyingMission: string (nullable = true)\n"," |-- MissionDate: string (nullable = true)\n"," |-- OperationSupported: string (nullable = true)\n"," |-- PeriodOfDay: string (nullable = true)\n"," |-- TakeoffLocation: string (nullable = true)\n"," |-- TargetCountry: string (nullable = true)\n"," |-- TimeOnTarget: double (nullable = true)\n"," |-- WeaponType: string (nullable = true)\n"," |-- WeaponsLoadedWeight: long (nullable = true)\n","\n"]}],"source":["Bombing_Operations.printSchema()"]},{"cell_type":"code","source":["#type(Bombing_Operations)\n","Bombing_Operations.show()"],"metadata":{"id":"XlktmO4yF9tM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739507647472,"user_tz":480,"elapsed":1124,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"15b4a526-b2b2-4ad2-ff46-10fd1ac53ae3"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["+--------+--------------------+-----------+------------------+-----------+---------------+-------------+------------+--------------------+-------------------+\n","|AirCraft| ContryFlyingMission|MissionDate|OperationSupported|PeriodOfDay|TakeoffLocation|TargetCountry|TimeOnTarget|          WeaponType|WeaponsLoadedWeight|\n","+--------+--------------------+-----------+------------------+-----------+---------------+-------------+------------+--------------------+-------------------+\n","|   EC-47|UNITED STATES OF ...| 1971-06-05|              NULL|          D|   TAN SON NHUT|     CAMBODIA|      1005.0|                NULL|                  0|\n","|   EC-47|UNITED STATES OF ...| 1972-12-26|              NULL|          D|  NAKHON PHANOM|SOUTH VIETNAM|       530.0|                NULL|                  0|\n","|    RF-4|UNITED STATES OF ...| 1973-07-28|              NULL|          D|       UDORN AB|         LAOS|       730.0|                NULL|                  0|\n","|     A-1|UNITED STATES OF ...| 1970-02-02|              NULL|          N|  NAKHON PHANOM|         LAOS|      1415.0|BLU27 FIRE BOMB (...|              17400|\n","|    A-37|     VIETNAM (SOUTH)| 1970-10-08|              NULL|          D|         DANANG|SOUTH VIETNAM|      1240.0|                NULL|                  0|\n","|     F-4|UNITED STATES OF ...| 1970-11-25|              NULL|          D|        UBON AB|         LAOS|       650.0|MK 82 GP BOMB (50...|              31860|\n","|     A-4|UNITED STATES OF ...| 1972-03-08|              NULL|          D|    TONKIN GULF|         LAOS|      1005.0|                NULL|                  0|\n","|     F-4|UNITED STATES OF ...| 1971-12-27|              NULL|       NULL|       UDORN AB|         LAOS|         0.0|                NULL|                  0|\n","|     A-7|UNITED STATES OF ...| 1972-05-24|              NULL|       NULL|    TONKIN GULF|NORTH VIETNAM|         0.0|                NULL|                  0|\n","|   EC-47|UNITED STATES OF ...| 1972-09-12|              NULL|          D|   TAN SON NHUT|SOUTH VIETNAM|       710.0|                NULL|                  0|\n","|   CH-53|UNITED STATES OF ...| 1974-06-13|              NULL|          N|  NAKHON PHANOM|     THAILAND|      1800.0|                NULL|                  0|\n","|   CH-53|UNITED STATES OF ...| 1974-12-19|              NULL|          D|  NAKHON PHANOM|     THAILAND|       800.0|                NULL|                  0|\n","|     O-1|     VIETNAM (SOUTH)| 1973-10-24|              NULL|          D|      NHA TRANG|SOUTH VIETNAM|       800.0|                NULL|                  0|\n","|    UH-1|     VIETNAM (SOUTH)| 1974-03-19|              NULL|          D|        PHU CAT|SOUTH VIETNAM|       800.0|        CARGO (TONS)|                  0|\n","|     C-7|UNITED STATES OF ...| 1970-05-08|              NULL|          D|   TAN SON NHUT|SOUTH VIETNAM|       800.0|                NULL|                  0|\n","|     A-6|UNITED STATES OF ...| 1971-05-12|              NULL|          N|    TONKIN GULF|         LAOS|      1304.0|CBU24 AN PR/MT (B...|              33200|\n","|   EB-66|UNITED STATES OF ...| 1971-12-03|              NULL|          N|          KORAT|         LAOS|      1445.0|                NULL|                  0|\n","|    T-28|                LAOS| 1971-12-19|              NULL|          D|     SAVANAKHET|         LAOS|       230.0|                NULL|                  0|\n","|     A-6|UNITED STATES OF ...| 1972-08-18|              NULL|       NULL|    TONKIN GULF|NORTH VIETNAM|         0.0|                NULL|                  0|\n","|     A-7|UNITED STATES OF ...| 1972-10-15|              NULL|          D|    TONKIN GULF|NORTH VIETNAM|       110.0|                NULL|                  0|\n","+--------+--------------------+-----------+------------------+-----------+---------------+-------------+------------+--------------------+-------------------+\n","only showing top 20 rows\n","\n"]}]},{"cell_type":"markdown","source":["* Remarks by Hui Lin 02/13/2025: \\\\\n","For the Question 2 of Assignment 02, I think this is the error of Dataframe datatype.\\\n","Bombing_Operations is a PySpark DataFrame, which can't not use the type() function of pds.\\\n","Let's try the RDD.show()."],"metadata":{"id":"j9P3ek99mylb"}},{"cell_type":"code","execution_count":12,"metadata":{"id":"6LJsbmlxSagO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739507655133,"user_tz":480,"elapsed":133,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"c6080083-8861-43a9-8432-d2b2c639525c"},"outputs":[{"output_type":"stream","name":"stdout","text":["root\n"," |-- AirCraft: string (nullable = true)\n"," |-- AirCraftName: string (nullable = true)\n"," |-- AirCraftType: string (nullable = true)\n","\n"]}],"source":["Aircraft_Glossary.printSchema()"]},{"cell_type":"markdown","metadata":{"id":"1jP5IBezSagQ"},"source":["Get a sample with `take()`:"]},{"cell_type":"code","execution_count":13,"metadata":{"id":"jrJpiG5ISagQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739507659706,"user_tz":480,"elapsed":558,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"5b24fda1-46a3-47e4-f1a1-f83c21d9a873"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Row(AirCraft='EC-47', ContryFlyingMission='UNITED STATES OF AMERICA', MissionDate='1971-06-05', OperationSupported=None, PeriodOfDay='D', TakeoffLocation='TAN SON NHUT', TargetCountry='CAMBODIA', TimeOnTarget=1005.0, WeaponType=None, WeaponsLoadedWeight=0),\n"," Row(AirCraft='EC-47', ContryFlyingMission='UNITED STATES OF AMERICA', MissionDate='1972-12-26', OperationSupported=None, PeriodOfDay='D', TakeoffLocation='NAKHON PHANOM', TargetCountry='SOUTH VIETNAM', TimeOnTarget=530.0, WeaponType=None, WeaponsLoadedWeight=0),\n"," Row(AirCraft='RF-4', ContryFlyingMission='UNITED STATES OF AMERICA', MissionDate='1973-07-28', OperationSupported=None, PeriodOfDay='D', TakeoffLocation='UDORN AB', TargetCountry='LAOS', TimeOnTarget=730.0, WeaponType=None, WeaponsLoadedWeight=0)]"]},"metadata":{},"execution_count":13}],"source":["Bombing_Operations.take(3)"]},{"cell_type":"markdown","metadata":{"id":"iu7n8KKjSagS"},"source":["Get a formatted sample with `show()`:"]},{"cell_type":"code","execution_count":14,"metadata":{"id":"nwYZrwanSagT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739507662039,"user_tz":480,"elapsed":381,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"220b51ba-9167-43fd-eb20-5046e7d81659"},"outputs":[{"output_type":"stream","name":"stdout","text":["+--------+--------------------+--------------------+\n","|AirCraft|        AirCraftName|        AirCraftType|\n","+--------+--------------------+--------------------+\n","|     A-1|Douglas A-1 Skyra...|         Fighter Jet|\n","|    A-26|Douglas A-26 Invader|        Light Bomber|\n","|    A-37|Cessna A-37 Drago...|Light ground-atta...|\n","|     A-4|McDonnell Douglas...|         Fighter Jet|\n","|     A-5|North American A-...|          Bomber Jet|\n","|     A-6|Grumman A-6 Intruder|     Attack Aircraft|\n","|     A-7|  LTV A-7 Corsair II|     Attack Aircraft|\n","|  AC-119|Fairchild AC-119 ...|Military Transpor...|\n","|  AC-123|Fairchild C-123 P...|Military Transpor...|\n","|  AC-130|Lockheed AC-130 S...|Fixed wing ground...|\n","|   AC-47|Douglas AC-47 Spooky|Ground attack air...|\n","|    AH-1| Bell AH-1 HueyCobra|          Helicopter|\n","|     B-1| Rockwell B-1 Lancer|Heavy strategic b...|\n","|    B-52| B-52 Stratofortress|    Strategic bomber|\n","|    B-57|Martin B-57 Canberra|     Tactical Bomber|\n","|    B-66|Douglas B-66 Dest...|        Light Bomber|\n","|     C-1| Grumman C-1A Trader|           Transport|\n","|   C-117|     C-117D Skytrain|           Transport|\n","|   C-119|Fairchild C-119 F...|Military Transpor...|\n","|   C-123|Fairchild C-123 P...|Military Transpor...|\n","+--------+--------------------+--------------------+\n","only showing top 20 rows\n","\n"]}],"source":["Aircraft_Glossary.show()"]},{"cell_type":"code","execution_count":15,"metadata":{"id":"hMAab2rJSagU","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739507693739,"user_tz":480,"elapsed":12675,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"f2004225-350a-4ac0-fb31-cecf468200df"},"outputs":[{"output_type":"stream","name":"stdout","text":["In total there are 4400775 operations\n"]}],"source":["print(\"In total there are {0} operations\".format(Bombing_Operations.count()))"]},{"cell_type":"code","source":["# Add by Hui Lin 02/13/2025\n","# check the total records of Aircraft.\n","print(\"In total there are {0} airecrafts\".format(Aircraft_Glossary.count()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R0iDw01KpFRR","executionInfo":{"status":"ok","timestamp":1739507700051,"user_tz":480,"elapsed":414,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"ecd21176-f87e-429b-fba4-d505d3a735a8"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["In total there are 104 airecrafts\n"]}]},{"cell_type":"markdown","metadata":{"id":"hkKWEEcLSagW"},"source":["## Question 1: Which countries are involved and in how many missions?\n","\n","Keywords: `Dataframe API`, `SQL`, `group by`, `sort`"]},{"cell_type":"markdown","metadata":{"id":"MwPL1-P5SagW"},"source":["Let's group the missions by `ContryFlyingMission` and count how many records exist:"]},{"cell_type":"code","source":["Bombing_Operations.show()"],"metadata":{"id":"NZR5_BYhNrbF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739507714691,"user_tz":480,"elapsed":282,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"973fc532-f067-4890-b009-638228571186"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["+--------+--------------------+-----------+------------------+-----------+---------------+-------------+------------+--------------------+-------------------+\n","|AirCraft| ContryFlyingMission|MissionDate|OperationSupported|PeriodOfDay|TakeoffLocation|TargetCountry|TimeOnTarget|          WeaponType|WeaponsLoadedWeight|\n","+--------+--------------------+-----------+------------------+-----------+---------------+-------------+------------+--------------------+-------------------+\n","|   EC-47|UNITED STATES OF ...| 1971-06-05|              NULL|          D|   TAN SON NHUT|     CAMBODIA|      1005.0|                NULL|                  0|\n","|   EC-47|UNITED STATES OF ...| 1972-12-26|              NULL|          D|  NAKHON PHANOM|SOUTH VIETNAM|       530.0|                NULL|                  0|\n","|    RF-4|UNITED STATES OF ...| 1973-07-28|              NULL|          D|       UDORN AB|         LAOS|       730.0|                NULL|                  0|\n","|     A-1|UNITED STATES OF ...| 1970-02-02|              NULL|          N|  NAKHON PHANOM|         LAOS|      1415.0|BLU27 FIRE BOMB (...|              17400|\n","|    A-37|     VIETNAM (SOUTH)| 1970-10-08|              NULL|          D|         DANANG|SOUTH VIETNAM|      1240.0|                NULL|                  0|\n","|     F-4|UNITED STATES OF ...| 1970-11-25|              NULL|          D|        UBON AB|         LAOS|       650.0|MK 82 GP BOMB (50...|              31860|\n","|     A-4|UNITED STATES OF ...| 1972-03-08|              NULL|          D|    TONKIN GULF|         LAOS|      1005.0|                NULL|                  0|\n","|     F-4|UNITED STATES OF ...| 1971-12-27|              NULL|       NULL|       UDORN AB|         LAOS|         0.0|                NULL|                  0|\n","|     A-7|UNITED STATES OF ...| 1972-05-24|              NULL|       NULL|    TONKIN GULF|NORTH VIETNAM|         0.0|                NULL|                  0|\n","|   EC-47|UNITED STATES OF ...| 1972-09-12|              NULL|          D|   TAN SON NHUT|SOUTH VIETNAM|       710.0|                NULL|                  0|\n","|   CH-53|UNITED STATES OF ...| 1974-06-13|              NULL|          N|  NAKHON PHANOM|     THAILAND|      1800.0|                NULL|                  0|\n","|   CH-53|UNITED STATES OF ...| 1974-12-19|              NULL|          D|  NAKHON PHANOM|     THAILAND|       800.0|                NULL|                  0|\n","|     O-1|     VIETNAM (SOUTH)| 1973-10-24|              NULL|          D|      NHA TRANG|SOUTH VIETNAM|       800.0|                NULL|                  0|\n","|    UH-1|     VIETNAM (SOUTH)| 1974-03-19|              NULL|          D|        PHU CAT|SOUTH VIETNAM|       800.0|        CARGO (TONS)|                  0|\n","|     C-7|UNITED STATES OF ...| 1970-05-08|              NULL|          D|   TAN SON NHUT|SOUTH VIETNAM|       800.0|                NULL|                  0|\n","|     A-6|UNITED STATES OF ...| 1971-05-12|              NULL|          N|    TONKIN GULF|         LAOS|      1304.0|CBU24 AN PR/MT (B...|              33200|\n","|   EB-66|UNITED STATES OF ...| 1971-12-03|              NULL|          N|          KORAT|         LAOS|      1445.0|                NULL|                  0|\n","|    T-28|                LAOS| 1971-12-19|              NULL|          D|     SAVANAKHET|         LAOS|       230.0|                NULL|                  0|\n","|     A-6|UNITED STATES OF ...| 1972-08-18|              NULL|       NULL|    TONKIN GULF|NORTH VIETNAM|         0.0|                NULL|                  0|\n","|     A-7|UNITED STATES OF ...| 1972-10-15|              NULL|          D|    TONKIN GULF|NORTH VIETNAM|       110.0|                NULL|                  0|\n","+--------+--------------------+-----------+------------------+-----------+---------------+-------------+------------+--------------------+-------------------+\n","only showing top 20 rows\n","\n"]}]},{"cell_type":"code","source":["#tmp1 = Bombing_Operations.groupBy(\"ContryFlyingMission\").count().sort(desc(\"count\"))\n","tmp1 = Bombing_Operations.groupBy(\"ContryFlyingMission\").count().sort(desc(\"count\"))\n","tmp1.show()"],"metadata":{"id":"q11fNlQgN7T8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739507733382,"user_tz":480,"elapsed":16407,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"9cd1db88-7cf5-4611-e7a7-e8e19dda0945"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["+--------------------+-------+\n","| ContryFlyingMission|  count|\n","+--------------------+-------+\n","|UNITED STATES OF ...|3708997|\n","|     VIETNAM (SOUTH)| 622013|\n","|                LAOS|  32777|\n","|       KOREA (SOUTH)|  24469|\n","|           AUSTRALIA|  12519|\n","+--------------------+-------+\n","\n"]}]},{"cell_type":"code","execution_count":19,"metadata":{"id":"BWcMVcgwSagX","scrolled":true,"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739507772898,"user_tz":480,"elapsed":37465,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"bc3752ef-6608-4930-db25-f561fdfa842e"},"outputs":[{"output_type":"stream","name":"stdout","text":["+--------------------+-------------+\n","| ContryFlyingMission|MissionsCount|\n","+--------------------+-------------+\n","|UNITED STATES OF ...|      3708997|\n","|     VIETNAM (SOUTH)|       622013|\n","|                LAOS|        32777|\n","|       KOREA (SOUTH)|        24469|\n","|           AUSTRALIA|        12519|\n","+--------------------+-------------+\n","\n","+--------------------+---------------+\n","| ContryFlyingMission|MissionsTakeoff|\n","+--------------------+---------------+\n","|UNITED STATES OF ...|             89|\n","|     VIETNAM (SOUTH)|             24|\n","|                LAOS|              7|\n","|       KOREA (SOUTH)|              3|\n","|           AUSTRALIA|              2|\n","+--------------------+---------------+\n","\n"]}],"source":["missions_counts = Bombing_Operations.groupBy(\"ContryFlyingMission\")\\\n","                                    .agg(count(\"*\").alias(\"MissionsCount\"))\\\n","                                    .sort(desc(\"MissionsCount\"))\n","missions_takeoff = Bombing_Operations.groupBy(\"ContryFlyingMission\")\\\n","                                    .agg(countDistinct(\"TakeoffLocation\").alias(\"MissionsTakeoff\"))\\\n","                                    .sort(desc(\"MissionsTakeoff\"))\n","missions_counts.show()\n","missions_takeoff.show()"]},{"cell_type":"markdown","metadata":{"id":"t5trEAkzSagY"},"source":["In this case we used the DataFrame API, but we could rewite the `groupBy` using pure SQL:"]},{"cell_type":"code","execution_count":20,"metadata":{"id":"3slo-sXOSagZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739507807980,"user_tz":480,"elapsed":20294,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"6851a164-5648-42ba-b1ee-e9045232273c"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/pyspark/sql/dataframe.py:329: FutureWarning: Deprecated in 2.0, use createOrReplaceTempView instead.\n","  warnings.warn(\"Deprecated in 2.0, use createOrReplaceTempView instead.\", FutureWarning)\n"]},{"output_type":"stream","name":"stdout","text":["+--------------------+-------------+\n","| ContryFlyingMission|MissionsCount|\n","+--------------------+-------------+\n","|UNITED STATES OF ...|      3708997|\n","|     VIETNAM (SOUTH)|       622013|\n","|                LAOS|        32777|\n","|       KOREA (SOUTH)|        24469|\n","|           AUSTRALIA|        12519|\n","+--------------------+-------------+\n","\n"]}],"source":["Bombing_Operations.registerTempTable(\"Bombing_Operations\")\n","\n","query = \"\"\"\n","SELECT ContryFlyingMission, count(*) as MissionsCount\n","FROM Bombing_Operations\n","GROUP BY ContryFlyingMission\n","ORDER BY MissionsCount DESC\n","\"\"\"\n","\n","missions_counts = spark.sql(query)\n","missions_counts.show()"]},{"cell_type":"code","source":["# Add by Hui Lin 02/13/2025\n","# Query about the flying missions involved takeoff location.\n","Bombing_Operations.registerTempTable(\"Bombing_Operations\")\n","\n","query2 = \"\"\"\n","SELECT ContryFlyingMission, count(DISTINCT TakeoffLocation) as MissionsTakeoff\n","FROM Bombing_Operations\n","GROUP BY ContryFlyingMission\n","ORDER BY MissionsTakeoff DESC\n","\"\"\"\n","\n","missions_takeoff = spark.sql(query2)\n","missions_takeoff.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xp5j_Hcd1kND","executionInfo":{"status":"ok","timestamp":1739507849122,"user_tz":480,"elapsed":22966,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"b6d6255a-2c61-4799-e3bf-b38c6cb47d43"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["+--------------------+---------------+\n","| ContryFlyingMission|MissionsTakeoff|\n","+--------------------+---------------+\n","|UNITED STATES OF ...|             89|\n","|     VIETNAM (SOUTH)|             24|\n","|                LAOS|              7|\n","|       KOREA (SOUTH)|              3|\n","|           AUSTRALIA|              2|\n","+--------------------+---------------+\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"5wQNXQnOSaga"},"source":["The Dataframe is small enough to be moved to Pandas:"]},{"cell_type":"code","execution_count":22,"metadata":{"id":"4nVJdPLDSagb","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1739507873700,"user_tz":480,"elapsed":20369,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"422185e1-4f41-4552-c56d-e31d5fe257a9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["        ContryFlyingMission  MissionsCount\n","0  UNITED STATES OF AMERICA        3708997\n","1           VIETNAM (SOUTH)         622013\n","2                      LAOS          32777\n","3             KOREA (SOUTH)          24469\n","4                 AUSTRALIA          12519"],"text/html":["\n","  <div id=\"df-467514ec-0576-450d-8d40-275f9e64975e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ContryFlyingMission</th>\n","      <th>MissionsCount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>UNITED STATES OF AMERICA</td>\n","      <td>3708997</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>VIETNAM (SOUTH)</td>\n","      <td>622013</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>LAOS</td>\n","      <td>32777</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>KOREA (SOUTH)</td>\n","      <td>24469</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>AUSTRALIA</td>\n","      <td>12519</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-467514ec-0576-450d-8d40-275f9e64975e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-467514ec-0576-450d-8d40-275f9e64975e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-467514ec-0576-450d-8d40-275f9e64975e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cfc63002-c531-4c49-a31a-c036309be0f0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cfc63002-c531-4c49-a31a-c036309be0f0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cfc63002-c531-4c49-a31a-c036309be0f0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"missions_count_pd","summary":"{\n  \"name\": \"missions_count_pd\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"ContryFlyingMission\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"VIETNAM (SOUTH)\",\n          \"AUSTRALIA\",\n          \"LAOS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MissionsCount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1602499,\n        \"min\": 12519,\n        \"max\": 3708997,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          622013,\n          12519,\n          32777\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":22}],"source":["missions_count_pd = missions_counts.toPandas()\n","missions_count_pd.head()\n","\n"]},{"cell_type":"markdown","metadata":{"id":"VQedtuQZSagc"},"source":["Let's plot a barchart with the number of missions by country:"]},{"cell_type":"code","source":["\n","#Add by Hui Lin 02/13/2025\n","missions_takeoff_pd = missions_takeoff.toPandas()\n","missions_takeoff_pd.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"TY1jX4cQ4kmj","executionInfo":{"status":"ok","timestamp":1739507902326,"user_tz":480,"elapsed":22409,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"21b44158-5a8d-4831-dee0-b940e23ed9e4"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        ContryFlyingMission  MissionsTakeoff\n","0  UNITED STATES OF AMERICA               89\n","1           VIETNAM (SOUTH)               24\n","2                      LAOS                7\n","3             KOREA (SOUTH)                3\n","4                 AUSTRALIA                2"],"text/html":["\n","  <div id=\"df-c50050af-c1bf-4771-bbb7-c8cc529824dc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ContryFlyingMission</th>\n","      <th>MissionsTakeoff</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>UNITED STATES OF AMERICA</td>\n","      <td>89</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>VIETNAM (SOUTH)</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>LAOS</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>KOREA (SOUTH)</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>AUSTRALIA</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c50050af-c1bf-4771-bbb7-c8cc529824dc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c50050af-c1bf-4771-bbb7-c8cc529824dc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c50050af-c1bf-4771-bbb7-c8cc529824dc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b1bc62c8-8a79-4759-8abd-678360146645\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b1bc62c8-8a79-4759-8abd-678360146645')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b1bc62c8-8a79-4759-8abd-678360146645 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"missions_takeoff_pd","summary":"{\n  \"name\": \"missions_takeoff_pd\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"ContryFlyingMission\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"VIETNAM (SOUTH)\",\n          \"AUSTRALIA\",\n          \"LAOS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MissionsTakeoff\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 36,\n        \"min\": 2,\n        \"max\": 89,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          24,\n          2,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":23}]},{"cell_type":"code","execution_count":24,"metadata":{"id":"tgbceprDSagd","colab":{"base_uri":"https://localhost:8080/","height":842},"executionInfo":{"status":"ok","timestamp":1739507912722,"user_tz":480,"elapsed":1048,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"88642447-329d-4468-8056-d68b34b12212"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Number of missions by Country')"]},"metadata":{},"execution_count":24},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["pl = missions_count_pd.plot(kind=\"bar\",\n","                            x=\"ContryFlyingMission\", y=\"MissionsCount\",\n","                            figsize=(10, 7), log=True, alpha=0.3, color=\"green\")\n","pl.set_xlabel(\"Country\")\n","pl.set_ylabel(\"Number of Missions (Log scale)\")\n","pl.set_title(\"Number of missions by Country\")"]},{"cell_type":"markdown","metadata":{"id":"1jCZfwK2Sage"},"source":["----"]},{"cell_type":"code","source":["# Add by Hui Lin 02/13/2025\n","# the same handling for missions involved takeoff location\n","pl2 = missions_takeoff_pd.plot(kind=\"bar\",\n","                            x=\"ContryFlyingMission\", y=\"MissionsTakeoff\",\n","                            figsize=(10, 7), log=True, alpha=0.3, color=\"green\")\n","pl2.set_xlabel(\"Country\")\n","pl2.set_ylabel(\"Number of Missions (takoff involved)\")\n","pl2.set_title(\"Number of takeoff missions by Country\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":842},"id":"0ZCkYP8o4x9x","executionInfo":{"status":"ok","timestamp":1739507916286,"user_tz":480,"elapsed":627,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"0c11e8e7-2093-47c0-e157-f6cb7932a60f"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Number of takeoff missions by Country')"]},"metadata":{},"execution_count":25},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"LLan66cXSagf"},"source":["## Questions 2: Show the number of missions in time for each of the countries involved.\n","\n","Keywords: `group by`, `parse date`, `plot`\n","\n","Let's select the relevant columns:"]},{"cell_type":"code","execution_count":26,"metadata":{"id":"BXNKt5PHSagf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739507957497,"user_tz":480,"elapsed":332,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"627af001-1255-48e6-fdd9-5ed8df125082"},"outputs":[{"output_type":"stream","name":"stdout","text":["+-----------+--------------------+\n","|MissionDate| ContryFlyingMission|\n","+-----------+--------------------+\n","| 1971-06-05|UNITED STATES OF ...|\n","| 1972-12-26|UNITED STATES OF ...|\n","| 1973-07-28|UNITED STATES OF ...|\n","| 1970-02-02|UNITED STATES OF ...|\n","| 1970-10-08|     VIETNAM (SOUTH)|\n","| 1970-11-25|UNITED STATES OF ...|\n","| 1972-03-08|UNITED STATES OF ...|\n","| 1971-12-27|UNITED STATES OF ...|\n","| 1972-05-24|UNITED STATES OF ...|\n","| 1972-09-12|UNITED STATES OF ...|\n","| 1974-06-13|UNITED STATES OF ...|\n","| 1974-12-19|UNITED STATES OF ...|\n","| 1973-10-24|     VIETNAM (SOUTH)|\n","| 1974-03-19|     VIETNAM (SOUTH)|\n","| 1970-05-08|UNITED STATES OF ...|\n","| 1971-05-12|UNITED STATES OF ...|\n","| 1971-12-03|UNITED STATES OF ...|\n","| 1971-12-19|                LAOS|\n","| 1972-08-18|UNITED STATES OF ...|\n","| 1972-10-15|UNITED STATES OF ...|\n","+-----------+--------------------+\n","only showing top 20 rows\n","\n"]}],"source":["missions_countries = Bombing_Operations.selectExpr([\"to_date(MissionDate) as MissionDate\", \"ContryFlyingMission\"])\n","missions_countries.show()"]},{"cell_type":"code","source":["missions_countries.take(3)"],"metadata":{"id":"UzZbi9t29bue","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739507960174,"user_tz":480,"elapsed":296,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"6aac6baf-6822-4050-c814-4bdb4964262a"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Row(MissionDate=datetime.date(1971, 6, 5), ContryFlyingMission='UNITED STATES OF AMERICA'),\n"," Row(MissionDate=datetime.date(1972, 12, 26), ContryFlyingMission='UNITED STATES OF AMERICA'),\n"," Row(MissionDate=datetime.date(1973, 7, 28), ContryFlyingMission='UNITED STATES OF AMERICA')]"]},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","metadata":{"id":"da9IeKntSagh"},"source":["The filed MissionDate is converted to a Python `date` object.\n","\n","Now we can group by `MissionDate` and `ContryFlyingMission` to get the count:"]},{"cell_type":"code","execution_count":28,"metadata":{"id":"TLza0bF9Sagh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739507986074,"user_tz":480,"elapsed":23695,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"a3905972-713c-463f-db71-76fb5d1fcb8b"},"outputs":[{"output_type":"stream","name":"stdout","text":["+-----------+--------------------+-------------+\n","|MissionDate| ContryFlyingMission|MissionsCount|\n","+-----------+--------------------+-------------+\n","| 1965-10-01|UNITED STATES OF ...|          447|\n","| 1965-10-02|UNITED STATES OF ...|          652|\n","| 1965-10-03|UNITED STATES OF ...|          608|\n","| 1965-10-04|UNITED STATES OF ...|          532|\n","| 1965-10-05|UNITED STATES OF ...|          697|\n","| 1965-10-05|     VIETNAM (SOUTH)|           72|\n","| 1965-10-06|     VIETNAM (SOUTH)|           49|\n","| 1965-10-06|UNITED STATES OF ...|          689|\n","| 1965-10-07|UNITED STATES OF ...|          605|\n","| 1965-10-07|     VIETNAM (SOUTH)|           50|\n","| 1965-10-08|UNITED STATES OF ...|          700|\n","| 1965-10-08|     VIETNAM (SOUTH)|           64|\n","| 1965-10-09|     VIETNAM (SOUTH)|           69|\n","| 1965-10-09|UNITED STATES OF ...|          677|\n","| 1965-10-10|     VIETNAM (SOUTH)|           59|\n","| 1965-10-10|UNITED STATES OF ...|          789|\n","| 1965-10-11|     VIETNAM (SOUTH)|           48|\n","| 1965-10-11|UNITED STATES OF ...|          455|\n","| 1965-10-12|UNITED STATES OF ...|          449|\n","| 1965-10-12|     VIETNAM (SOUTH)|           62|\n","+-----------+--------------------+-------------+\n","only showing top 20 rows\n","\n"]}],"source":["missions_by_date = missions_countries\\\n","                    .groupBy([\"MissionDate\", \"ContryFlyingMission\"])\\\n","                    .agg(count(\"*\").alias(\"MissionsCount\"))\\\n","                    .sort(asc(\"MissionDate\"))\n","missions_by_date.show()"]},{"cell_type":"code","source":["# Remarks by Hui Lin 02/13/2025\n","# for the different dataframe types of question 2, it need to be converted to pds here.\n","missions_by_date_pd = missions_by_date.toPandas()\n","missions_by_date_pd.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"jgHDWGGM7xRR","executionInfo":{"status":"ok","timestamp":1739508026255,"user_tz":480,"elapsed":23459,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"8a3d3ca1-fdd4-4268-b446-7e7e976ea373"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  MissionDate       ContryFlyingMission  MissionsCount\n","0  1965-10-01  UNITED STATES OF AMERICA            447\n","1  1965-10-02  UNITED STATES OF AMERICA            652\n","2  1965-10-03  UNITED STATES OF AMERICA            608\n","3  1965-10-04  UNITED STATES OF AMERICA            532\n","4  1965-10-05  UNITED STATES OF AMERICA            697"],"text/html":["\n","  <div id=\"df-a297936e-274f-41f5-85c9-10e52b29179f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MissionDate</th>\n","      <th>ContryFlyingMission</th>\n","      <th>MissionsCount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1965-10-01</td>\n","      <td>UNITED STATES OF AMERICA</td>\n","      <td>447</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1965-10-02</td>\n","      <td>UNITED STATES OF AMERICA</td>\n","      <td>652</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1965-10-03</td>\n","      <td>UNITED STATES OF AMERICA</td>\n","      <td>608</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1965-10-04</td>\n","      <td>UNITED STATES OF AMERICA</td>\n","      <td>532</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1965-10-05</td>\n","      <td>UNITED STATES OF AMERICA</td>\n","      <td>697</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a297936e-274f-41f5-85c9-10e52b29179f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a297936e-274f-41f5-85c9-10e52b29179f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a297936e-274f-41f5-85c9-10e52b29179f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d9e72f47-902f-4ffe-ae88-1cd3b0a8f329\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d9e72f47-902f-4ffe-ae88-1cd3b0a8f329')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d9e72f47-902f-4ffe-ae88-1cd3b0a8f329 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"missions_by_date_pd","summary":"{\n  \"name\": \"missions_by_date_pd\",\n  \"rows\": 9703,\n  \"fields\": [\n    {\n      \"column\": \"MissionDate\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1965-10-01\",\n        \"max\": \"1975-06-30\",\n        \"num_unique_values\": 3560,\n        \"samples\": [\n          \"1975-06-15\",\n          \"1966-04-03\",\n          \"1975-03-02\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ContryFlyingMission\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"VIETNAM (SOUTH)\",\n          \"KOREA (SOUTH)\",\n          \"AUSTRALIA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MissionsCount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 639,\n        \"min\": 1,\n        \"max\": 3832,\n        \"num_unique_values\": 1881,\n        \"samples\": [\n          1376,\n          2848,\n          1986\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","metadata":{"id":"IAhOE55wSagj"},"source":["Now we can plot the content with a different series for each country:"]},{"cell_type":"code","execution_count":30,"metadata":{"id":"wLq6ulAySagl","colab":{"base_uri":"https://localhost:8080/","height":542},"executionInfo":{"status":"ok","timestamp":1739508030232,"user_tz":480,"elapsed":669,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"79caf9c0-4520-4223-9550-b62ff551a63a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7a85054c7750>"]},"metadata":{},"execution_count":30},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}],"source":["fig = plt.figure(figsize=(10, 6))\n","# iterate the different groups to create a different series\n","for country, missions in missions_by_date_pd.groupby(\"ContryFlyingMission\"):\n","    plt.plot(missions[\"MissionDate\"], missions[\"MissionsCount\"], label=country)\n","\n","plt.legend(loc='best')"]},{"cell_type":"markdown","metadata":{"id":"GEMzTwxGSagp"},"source":["We can observe how South Vietnam increased its missions starting from 1970. The drop in 1973 is motivated by the [Paris Peace Accords](https://en.wikipedia.org/wiki/Paris_Peace_Accords) that took place on January 27th, 1973, to establish peace in Vietnam and end the war."]},{"cell_type":"markdown","metadata":{"id":"dl6m0B6iSagp"},"source":["----"]},{"cell_type":"markdown","metadata":{"id":"uEwBspLySagp"},"source":["## Question 3: Who bombed this location?\n","\n","Keywords: `RDD map reduce` `cache` `save results`\n","\n","<img style=\"float: right;\" src=\"https://raw.githubusercontent.com/epfl-ada/2019/c17af0d3c73f11cb083717b7408fedd86245dc4d/Tutorials/04%20-%20Scaling%20Up/img/Hanoi_POL1966.jpg\">\n","\n","This picture is the Hanoi POL facility (North Vietnam) burning after it was attacked by the U.S. Air Force on 29 June 1966 in the context of the Rolling Thunder operation.\n","\n","We are interested in discovering what was the most common take-off location during that day."]},{"cell_type":"code","execution_count":31,"metadata":{"id":"uq6jqsgBSagq","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739508049125,"user_tz":480,"elapsed":14260,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"1947170a-5241-401a-b305-bf96f523df22"},"outputs":[{"output_type":"stream","name":"stdout","text":["+--------+--------------------+-----------+------------------+-----------+---------------+-------------+------------+--------------+-------------------+\n","|AirCraft| ContryFlyingMission|MissionDate|OperationSupported|PeriodOfDay|TakeoffLocation|TargetCountry|TimeOnTarget|    WeaponType|WeaponsLoadedWeight|\n","+--------+--------------------+-----------+------------------+-----------+---------------+-------------+------------+--------------+-------------------+\n","|   F-105|UNITED STATES OF ...| 1966-06-29|       STEEL TIGER|          D|         TAKHLI|NORTH VIETNAM|       310.0|  1000LB MK-83|                 -1|\n","|     F-4|UNITED STATES OF ...| 1966-06-29|      ROLLING THUN|          D|  CONSTELLATION|NORTH VIETNAM|       703.0| 2.75IN HE RKT|                 -1|\n","|   C-130|UNITED STATES OF ...| 1966-06-29|      ROLLING THUN|          N|        UBON AB|NORTH VIETNAM|      1205.0|         MK-24|                 -1|\n","|     A-4|UNITED STATES OF ...| 1966-06-29|      ROLLING THUN|          E|  CONSTELLATION|NORTH VIETNAM|      1104.0|5.0IN HEAT RKT|                 -1|\n","|   F-105|UNITED STATES OF ...| 1966-06-29|      ROLLING THUN|          E|          KORAT|NORTH VIETNAM|      1043.0|          M-61|                 -1|\n","|     A-4|UNITED STATES OF ...| 1966-06-29|      ROLLING THUN|          D|  CONSTELLATION|NORTH VIETNAM|       945.0|   250LB MK-81|                 -1|\n","|   F-105|UNITED STATES OF ...| 1966-06-29|      ROLLING THUN|          D|          KORAT|NORTH VIETNAM|       855.0|  1000LB MK-83|                 -1|\n","|    RA-5|UNITED STATES OF ...| 1966-06-29|              NULL|          D|  CONSTELLATION|NORTH VIETNAM|       655.0|   PHOTO EQUIP|                 -1|\n","|     F-4|UNITED STATES OF ...| 1966-06-29|      ROLLING THUN|          D|  CONSTELLATION|NORTH VIETNAM|       703.0| 2.75IN HE RKT|                 -1|\n","|     F-4|UNITED STATES OF ...| 1966-06-29|      ROLLING THUN|          N|        UBON AB|NORTH VIETNAM|      2015.0|         MK-24|                 -1|\n","|     F-4|UNITED STATES OF ...| 1966-06-29|      ROLLING THUN|          N|        UBON AB|NORTH VIETNAM|      1235.0|  LAU-3A/AERO7|                 -1|\n","|     A-4|UNITED STATES OF ...| 1966-06-29|      ROLLING THUN|          D|  CONSTELLATION|NORTH VIETNAM|         0.0| 2.75IN HE RKT|                 -1|\n","|   F-105|UNITED STATES OF ...| 1966-06-29|      ROLLING THUN|          D|          KORAT|NORTH VIETNAM|       515.0|750LB GP M-117|                 -1|\n","|   F-105|UNITED STATES OF ...| 1966-06-29|      ROLLING THUN|          D|          KORAT|NORTH VIETNAM|       546.0|  3000LB M-118|                 -1|\n","|     A-4|UNITED STATES OF ...| 1966-06-29|      ROLLING THUN|          D|  CONSTELLATION|NORTH VIETNAM|         0.0|   250LB MK-81|                 -1|\n","|     A-4|UNITED STATES OF ...| 1966-06-29|      ROLLING THUN|          D|  CONSTELLATION|NORTH VIETNAM|       800.0|   MK-11/MK-12|                 -1|\n","|     F-4|UNITED STATES OF ...| 1966-06-29|      ROLLING THUN|          N|        UBON AB|NORTH VIETNAM|      1445.0|750LB GP M-117|                 -1|\n","|     A-4|UNITED STATES OF ...| 1966-06-29|      ROLLING THUN|          D|  CONSTELLATION|NORTH VIETNAM|       450.0|  LAU-3A/AERO7|                 -1|\n","|   F-105|UNITED STATES OF ...| 1966-06-29|      ROLLING THUN|          D|          KORAT|NORTH VIETNAM|       120.0|1000LB GP M-65|                 -1|\n","|   F-105|UNITED STATES OF ...| 1966-06-29|      ROLLING THUN|          D|          KORAT|NORTH VIETNAM|        40.0|1000LB GP M-65|                 -1|\n","+--------+--------------------+-----------+------------------+-----------+---------------+-------------+------------+--------------+-------------------+\n","only showing top 20 rows\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["234"]},"metadata":{},"execution_count":31}],"source":["jun_29_operations = Bombing_Operations.where(\"MissionDate = '1966-06-29' AND TargetCountry='NORTH VIETNAM' AND WeaponType IS NOT NULL\")\n","jun_29_operations.show()\n","#Add by Hui Lin 02/13/2025\n","#jun_29_operations = Bombing_Operations.where(\"MissionDate = '1966-06-29' AND TargetCountry='NORTH VIETNAM'\")\n","jun_29_operations.count() # There are 161(395-234) times without attacking on that day."]},{"cell_type":"markdown","metadata":{"id":"Qurjwd0zSagr"},"source":["Which coutries scheduled missions that day?"]},{"cell_type":"code","execution_count":32,"metadata":{"id":"uoiVSE7NSags","colab":{"base_uri":"https://localhost:8080/","height":112},"executionInfo":{"status":"ok","timestamp":1739508064857,"user_tz":480,"elapsed":11887,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"49a65149-3aa3-4c63-899a-248087dd3ad6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["        ContryFlyingMission  MissionsCount\n","0           VIETNAM (SOUTH)              4\n","1  UNITED STATES OF AMERICA            230"],"text/html":["\n","  <div id=\"df-928d41d2-c7ae-488e-a9b7-3356dfec3ecd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ContryFlyingMission</th>\n","      <th>MissionsCount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>VIETNAM (SOUTH)</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>UNITED STATES OF AMERICA</td>\n","      <td>230</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-928d41d2-c7ae-488e-a9b7-3356dfec3ecd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-928d41d2-c7ae-488e-a9b7-3356dfec3ecd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-928d41d2-c7ae-488e-a9b7-3356dfec3ecd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-497b4d95-a819-4bc0-aaf9-df244cf3bdda\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-497b4d95-a819-4bc0-aaf9-df244cf3bdda')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-497b4d95-a819-4bc0-aaf9-df244cf3bdda button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"jun_29_operations\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"ContryFlyingMission\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"UNITED STATES OF AMERICA\",\n          \"VIETNAM (SOUTH)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MissionsCount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 159,\n        \"min\": 4,\n        \"max\": 230,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          230,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":32}],"source":["jun_29_operations.groupBy(\"ContryFlyingMission\").agg(count(\"*\").alias(\"MissionsCount\")).toPandas()"]},{"cell_type":"markdown","metadata":{"id":"-0Q2bS4KSagt"},"source":["Most of the operation that day were performed by USA airplanes."]},{"cell_type":"code","execution_count":33,"metadata":{"id":"cLec-CkmSagu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739508072266,"user_tz":480,"elapsed":1907,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"8bc54136-b076-4def-da58-dd309a9a8ff7"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Row(AirCraft='F-105', ContryFlyingMission='UNITED STATES OF AMERICA', MissionDate='1966-06-29', OperationSupported='STEEL TIGER', PeriodOfDay='D', TakeoffLocation='TAKHLI', TargetCountry='NORTH VIETNAM', TimeOnTarget=310.0, WeaponType='1000LB MK-83', WeaponsLoadedWeight=-1),\n"," Row(AirCraft='F-4', ContryFlyingMission='UNITED STATES OF AMERICA', MissionDate='1966-06-29', OperationSupported='ROLLING THUN', PeriodOfDay='D', TakeoffLocation='CONSTELLATION', TargetCountry='NORTH VIETNAM', TimeOnTarget=703.0, WeaponType='2.75IN HE RKT', WeaponsLoadedWeight=-1),\n"," Row(AirCraft='C-130', ContryFlyingMission='UNITED STATES OF AMERICA', MissionDate='1966-06-29', OperationSupported='ROLLING THUN', PeriodOfDay='N', TakeoffLocation='UBON AB', TargetCountry='NORTH VIETNAM', TimeOnTarget=1205.0, WeaponType='MK-24', WeaponsLoadedWeight=-1)]"]},"metadata":{},"execution_count":33}],"source":["jun_29_operations.take(3)"]},{"cell_type":"markdown","metadata":{"id":"77XdZuNDSagv"},"source":["You can specify to cache the content in memory:"]},{"cell_type":"code","execution_count":34,"metadata":{"id":"q45a-OYwSagw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739508075902,"user_tz":480,"elapsed":168,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"56ec3513-983b-4738-95cf-8832ad016b84"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["DataFrame[AirCraft: string, ContryFlyingMission: string, MissionDate: string, OperationSupported: string, PeriodOfDay: string, TakeoffLocation: string, TargetCountry: string, TimeOnTarget: double, WeaponType: string, WeaponsLoadedWeight: bigint]"]},"metadata":{},"execution_count":34}],"source":["jun_29_operations.cache()"]},{"cell_type":"markdown","metadata":{"id":"feWOqgKISagx"},"source":["Now you can count the number of rows and move the content to the cache:"]},{"cell_type":"code","execution_count":35,"metadata":{"id":"vIpLEQrlSagx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739508092375,"user_tz":480,"elapsed":14175,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"977c71f3-2b95-40de-f445-c47d1b67e0ca"},"outputs":[{"output_type":"stream","name":"stdout","text":["CPU times: user 69.5 ms, sys: 14.4 ms, total: 83.9 ms\n","Wall time: 14 s\n"]},{"output_type":"execute_result","data":{"text/plain":["234"]},"metadata":{},"execution_count":35}],"source":["%time jun_29_operations.count()"]},{"cell_type":"markdown","metadata":{"id":"uCTEq5LZSagz"},"source":["The second time the content is cached and the operation is much faster:"]},{"cell_type":"code","execution_count":36,"metadata":{"id":"6oZtHYspSagz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739508101080,"user_tz":480,"elapsed":355,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"8a586e55-6ffd-4dee-cc86-b33c3b8541b2"},"outputs":[{"output_type":"stream","name":"stdout","text":["CPU times: user 2.17 ms, sys: 0 ns, total: 2.17 ms\n","Wall time: 192 ms\n"]},{"output_type":"execute_result","data":{"text/plain":["234"]},"metadata":{},"execution_count":36}],"source":["%time jun_29_operations.count()"]},{"cell_type":"markdown","metadata":{"id":"_4Hzke2kSag1"},"source":["You can also save the results on a file..."]},{"cell_type":"code","execution_count":37,"metadata":{"id":"4_2p0Ha9Sag1","executionInfo":{"status":"ok","timestamp":1739508109595,"user_tz":480,"elapsed":739,"user":{"displayName":"林辉","userId":"00815086233424508369"}}},"outputs":[],"source":["jun_29_operations.write.mode('overwrite').json(\"jun_29_operations.json\")"]},{"cell_type":"markdown","metadata":{"id":"OJwG61TNSag3"},"source":["... and read from the file:"]},{"cell_type":"code","execution_count":38,"metadata":{"id":"JTe1l78_Sag4","executionInfo":{"status":"ok","timestamp":1739508119034,"user_tz":480,"elapsed":342,"user":{"displayName":"林辉","userId":"00815086233424508369"}}},"outputs":[],"source":["jun_29_operations = spark.read.json(\"jun_29_operations.json\")"]},{"cell_type":"markdown","metadata":{"id":"DEW08u3_Sag6"},"source":["We can use the simple DataFrame API..."]},{"cell_type":"code","execution_count":39,"metadata":{"id":"UYO-CuHISag8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739508123031,"user_tz":480,"elapsed":552,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"59a1c0ea-79e0-430a-c3e3-efa0431ebdf8"},"outputs":[{"output_type":"stream","name":"stdout","text":["+----------------+-------------+\n","| TakeoffLocation|MissionsCount|\n","+----------------+-------------+\n","|   CONSTELLATION|           52|\n","|        UDORN AB|           36|\n","|         UBON AB|           36|\n","|           KORAT|           35|\n","|    TAN SON NHUT|           25|\n","|          TAKHLI|           20|\n","|          RANGER|           13|\n","|          DANANG|           12|\n","|HANCOCK (CVA-19)|            5|\n","+----------------+-------------+\n","\n"]}],"source":["TakeoffLocationCounts = jun_29_operations\\\n","                            .groupBy(\"TakeoffLocation\").agg(count(\"*\").alias(\"MissionsCount\"))\\\n","                            .sort(desc(\"MissionsCount\"))\n","TakeoffLocationCounts.show()"]},{"cell_type":"markdown","metadata":{"id":"2PHZStWQSag9"},"source":["... or the explicit Map/Reduce format with RDDs.\n","\n","First we emit a pair in the format (Location, 1):"]},{"cell_type":"code","execution_count":40,"metadata":{"id":"OgEeKdtYSag9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739508133940,"user_tz":480,"elapsed":1606,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"509b65c8-2813-467e-a9b6-f1ca916ea1f9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('TAKHLI', 1), ('CONSTELLATION', 1), ('UBON AB', 1)]"]},"metadata":{},"execution_count":40}],"source":["all_locations = jun_29_operations.rdd.map(lambda row: (row.TakeoffLocation, 1))\n","all_locations.take(3)"]},{"cell_type":"code","source":["type(all_locations)"],"metadata":{"id":"5fQC052esGyu","colab":{"base_uri":"https://localhost:8080/","height":203},"executionInfo":{"status":"ok","timestamp":1739508136432,"user_tz":480,"elapsed":343,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"ae47c6c7-7bf3-41ab-b947-0a708b4762bb"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["pyspark.rdd.PipelinedRDD"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>pyspark.rdd.PipelinedRDD</b><br/>def __init__(prev: RDD[T], func: Callable[[int, Iterable[T]], Iterable[U]], preservesPartitioning: bool=False, isFromBarrier: bool=False)</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.11/dist-packages/pyspark/rdd.py</a>Examples\n","--------\n","Pipelined maps:\n","\n","&gt;&gt;&gt; rdd = sc.parallelize([1, 2, 3, 4])\n","&gt;&gt;&gt; rdd.map(lambda x: 2 * x).cache().map(lambda x: 2 * x).collect()\n","[4, 8, 12, 16]\n","&gt;&gt;&gt; rdd.map(lambda x: 2 * x).map(lambda x: 2 * x).collect()\n","[4, 8, 12, 16]\n","\n","Pipelined reduces:\n","\n","&gt;&gt;&gt; from operator import add\n","&gt;&gt;&gt; rdd.map(lambda x: 2 * x).reduce(add)\n","20\n","&gt;&gt;&gt; rdd.flatMap(lambda x: [x, x]).reduce(add)\n","20</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 5395);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":41}]},{"cell_type":"markdown","metadata":{"id":"Akm81xVxSag_"},"source":["Then, we sum counters in the reduce step, and we sort by count:"]},{"cell_type":"code","execution_count":42,"metadata":{"id":"_hVvIF_WSag_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739508140282,"user_tz":480,"elapsed":1023,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"2b1c7abe-b377-44e9-926e-56628c9652d8"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('CONSTELLATION', 52), ('UBON AB', 36), ('UDORN AB', 36)]"]},"metadata":{},"execution_count":42}],"source":["locations_counts_rdd = all_locations.reduceByKey(lambda a, b: a+b).sortBy(lambda r: -r[1])\n","\n","type(locations_counts_rdd)\n","locations_counts_rdd.take(3)\n"]},{"cell_type":"markdown","metadata":{"id":"od5h9c6qSahB"},"source":["Now we can convert the RDD in dataframe by mapping the pairs to objects of type `Row`"]},{"cell_type":"code","execution_count":43,"metadata":{"id":"KNDn84R_SahB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739508143743,"user_tz":480,"elapsed":665,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"2dabc1d9-32cd-4c3a-f19e-d6a3f194c231"},"outputs":[{"output_type":"stream","name":"stdout","text":["+----------------+-------------+\n","| TakeoffLocation|MissionsCount|\n","+----------------+-------------+\n","|   CONSTELLATION|           52|\n","|         UBON AB|           36|\n","|        UDORN AB|           36|\n","|           KORAT|           35|\n","|    TAN SON NHUT|           25|\n","|          TAKHLI|           20|\n","|          RANGER|           13|\n","|          DANANG|           12|\n","|HANCOCK (CVA-19)|            5|\n","+----------------+-------------+\n","\n"]}],"source":["locations_counts_with_schema = locations_counts_rdd.map(lambda r: Row(TakeoffLocation=r[0], MissionsCount=r[1]))\n","locations_counts = spark.createDataFrame(locations_counts_with_schema)\n","locations_counts.show()"]},{"cell_type":"markdown","metadata":{"id":"cE8asfBPSahD"},"source":["<img style=\"float: right;\" src=\"https://raw.githubusercontent.com/epfl-ada/2019/c17af0d3c73f11cb083717b7408fedd86245dc4d/Tutorials/04%20-%20Scaling%20Up/img/USS_Constellation.jpg\">\n","\n","\n","That day the most common take-off location was the ship USS Constellation (CV-64). We cannot univocally identify one take off location, but we can reduce the possible candidates. Next steps: explore TimeOnTarget feature.\n","\n","_USS Constellation (CV-64), a Kitty Hawk-class supercarrier, was the third ship of the United States Navy to be named in honor of the \"new constellation of stars\" on the flag of the United States. One of the fastest ships in the Navy, as proven by her victory during a battlegroup race held in 1985, she was nicknamed \"Connie\" by her crew and officially as \"America's Flagship\"._"]},{"cell_type":"markdown","metadata":{"id":"lKKM6VS8SahD"},"source":["----"]},{"cell_type":"markdown","metadata":{"id":"aaiVcdF8SahD"},"source":["## Questions 4: What is the most used aircraft type during the Vietnam war (number of missions)?\n","\n","Keywords: `join` `group by`"]},{"cell_type":"markdown","metadata":{"id":"xnV48FZlSahG"},"source":["Let's check the content of `Aircraft_Glossary`:"]},{"cell_type":"code","execution_count":47,"metadata":{"id":"yovhBV5sSahI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739508538555,"user_tz":480,"elapsed":337,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"0fc7121a-6cdf-4e85-8583-fd9b6d2a430d"},"outputs":[{"output_type":"stream","name":"stdout","text":["+--------+--------------------+--------------------+\n","|AirCraft|        AirCraftName|        AirCraftType|\n","+--------+--------------------+--------------------+\n","|     A-1|Douglas A-1 Skyra...|         Fighter Jet|\n","|    A-26|Douglas A-26 Invader|        Light Bomber|\n","|    A-37|Cessna A-37 Drago...|Light ground-atta...|\n","|     A-4|McDonnell Douglas...|         Fighter Jet|\n","|     A-5|North American A-...|          Bomber Jet|\n","+--------+--------------------+--------------------+\n","only showing top 5 rows\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["104"]},"metadata":{},"execution_count":47}],"source":["Aircraft_Glossary.show(5)\n","Aircraft_Glossary.count()"]},{"cell_type":"markdown","metadata":{"id":"yO0ExxRoSahJ"},"source":["We are interested in the filed `AirCraftType`."]},{"cell_type":"code","execution_count":49,"metadata":{"id":"Z4DnpCTmSahJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739508852887,"user_tz":480,"elapsed":314,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"5c3cabe6-81af-437e-e970-f1614461e2a4"},"outputs":[{"output_type":"stream","name":"stdout","text":["+--------+\n","|AirCraft|\n","+--------+\n","|   EC-47|\n","|   EC-47|\n","|    RF-4|\n","|     A-1|\n","|    A-37|\n","+--------+\n","only showing top 5 rows\n","\n"]}],"source":["Bombing_Operations.select(\"AirCraft\").show(5)"]},{"cell_type":"markdown","metadata":{"id":"Z97Y9DuUSahK"},"source":["We can join on the column `AirCraft` of both dataframes."]},{"cell_type":"markdown","metadata":{"id":"9txA3mx1SahL"},"source":["With Dataframe API:"]},{"cell_type":"code","execution_count":50,"metadata":{"id":"s3j3Fu8kSahL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739508860347,"user_tz":480,"elapsed":139,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"20cd12ec-94b1-451c-9ec7-0c5944c721d2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["DataFrame[AirCraft: string, ContryFlyingMission: string, MissionDate: string, OperationSupported: string, PeriodOfDay: string, TakeoffLocation: string, TargetCountry: string, TimeOnTarget: double, WeaponType: string, WeaponsLoadedWeight: bigint, AirCraft: string, AirCraftName: string, AirCraftType: string]"]},"metadata":{},"execution_count":50}],"source":["missions_joined = Bombing_Operations.join(Aircraft_Glossary,\n","                                          Bombing_Operations.AirCraft == Aircraft_Glossary.AirCraft)\n","missions_joined"]},{"cell_type":"markdown","metadata":{"id":"QhQbN8AOSahN"},"source":["We can select only the field we are interested in:"]},{"cell_type":"code","execution_count":51,"metadata":{"id":"s5KgFBXASahO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739508877575,"user_tz":480,"elapsed":600,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"5e30972d-6b70-4080-a0c5-df185658ccc6"},"outputs":[{"output_type":"stream","name":"stdout","text":["+--------------------+\n","|        AirCraftType|\n","+--------------------+\n","|Military Transpor...|\n","|Military Transpor...|\n","|  Fighter bomber jet|\n","|         Fighter Jet|\n","|Light ground-atta...|\n","+--------------------+\n","only showing top 5 rows\n","\n"]}],"source":["missions_aircrafts = missions_joined.select(\"AirCraftType\")\n","missions_aircrafts.show(5)"]},{"cell_type":"markdown","metadata":{"id":"giUuCERTSahT"},"source":["And finally we can group by `AirCraftType` and count:"]},{"cell_type":"code","execution_count":52,"metadata":{"id":"S0QytpygSahU","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739508954170,"user_tz":480,"elapsed":21671,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"950be4ed-6d71-498f-fb28-1549f9768d84"},"outputs":[{"output_type":"stream","name":"stdout","text":["+--------------------+-------------+\n","|        AirCraftType|MissionsCount|\n","+--------------------+-------------+\n","|  Fighter Jet Bomber|      1073126|\n","|         Fighter Jet|       882594|\n","|  Jet Fighter Bomber|       451385|\n","|     Attack Aircraft|       315246|\n","|Light ground-atta...|       267457|\n","|  Fighter bomber jet|       242231|\n","|Military Transpor...|       228426|\n","|  Utility Helicopter|       146653|\n","|    Strategic bomber|        99100|\n","|     Tactical Bomber|        82219|\n","|Observation Aircraft|        81820|\n","|Fixed wing ground...|        75058|\n","|Ground attack air...|        73843|\n","|Carrier-based Fig...|        58691|\n","|   Training Aircraft|        48435|\n","|       Light fighter|        39999|\n","|        Light Bomber|        39262|\n","|Light Tactical Bo...|        34738|\n","| Light Utility Plane|        28582|\n","|Observation/ Ligh...|        24491|\n","+--------------------+-------------+\n","only showing top 20 rows\n","\n"]}],"source":["missions_aircrafts.groupBy(\"AirCraftType\").agg(count(\"*\").alias(\"MissionsCount\"))\\\n","                  .sort(desc(\"MissionsCount\"))\\\n","                  .show()"]},{"cell_type":"markdown","metadata":{"id":"2Y1043GMSahV"},"source":["In alternative we can rewrite this in pure SQL:"]},{"cell_type":"code","execution_count":53,"metadata":{"id":"980KMZCOSahV","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1739509040026,"user_tz":480,"elapsed":20424,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"e4c7acd1-752b-44ce-d040-ce310fcf9989"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/pyspark/sql/dataframe.py:329: FutureWarning: Deprecated in 2.0, use createOrReplaceTempView instead.\n","  warnings.warn(\"Deprecated in 2.0, use createOrReplaceTempView instead.\", FutureWarning)\n"]},{"output_type":"execute_result","data":{"text/plain":["                                  AirCraftType  MissionsCount\n","0                           Fighter Jet Bomber        1073126\n","1                                  Fighter Jet         882594\n","2                           Jet Fighter Bomber         451385\n","3                              Attack Aircraft         315246\n","4                 Light ground-attack aircraft         267457\n","5                           Fighter bomber jet         242231\n","6                  Military Transport aircraft         228426\n","7                           Utility Helicopter         146653\n","8                             Strategic bomber          99100\n","9                              Tactical Bomber          82219\n","10                        Observation Aircraft          81820\n","11            Fixed wing ground attack gunship          75058\n","12                      Ground attack aircraft          73843\n","13                   Carrier-based Fighter Jet          58691\n","14                           Training Aircraft          48435\n","15                               Light fighter          39999\n","16                                Light Bomber          39262\n","17                       Light Tactical Bomber          34738\n","18                         Light Utility Plane          28582\n","19          Observation/ Light Attack Aircraft          24491\n","20          Airborne early warning and control          17226\n","21                           Rescue Helicopter          10331\n","22                                Fighter jet           10322\n","23                        Transport Helicopter           9289\n","24                  Aerial refuelling aircraft           8266\n","25           Photographic reconnaissance plane           7800\n","26                       Heavy-lift Helicopter           6903\n","27                       Heavy attack aircraft           6450\n","28                             Rescue Aircraft           6062\n","29                            Utility Aircraft           5782\n","30                 Heavy-lift cargo helicopter           5587\n","31                            Strategic Bomber           4633\n","32                          Fighter Prop Plane           3882\n","33                            Cargo Helicopter           2571\n","34                   Close -Support Helicopter           2174\n","35        Carrier-based Early Warning aircraft           1498\n","36                      Early Warning aircraft           1380\n","37                                  Helicopter           1292\n","38             Weather reconnaissance aircraft           1223\n","39                                   Transport           1021\n","40              Close air support prop gunship            921\n","41                Search and Rescue Helicopter            875\n","42                     Reconnaissance Aircraft            752\n","43                 Airliner/transport aircraft            397\n","44                       Primary Pilot Trainer            229\n","45                        Signals Intelligence            203\n","46                            Cargo Prop plane            176\n","47                        Transport Prop Plane             43\n","48                                  Bomber Jet              8\n","49                          Transport Aircraft              7\n","50                          Utility Prop plane              5\n","51                      Heavy strategic bomber              2\n","52  Carrier-base all-weather night Fighter Jet              2\n","53                         Airliner/ Transport              1\n","54                            Medium Transport              1\n","55                    Light Utility Helicopter              1"],"text/html":["\n","  <div id=\"df-e8cc60cd-609f-4d48-8c63-a568087d3a43\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AirCraftType</th>\n","      <th>MissionsCount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Fighter Jet Bomber</td>\n","      <td>1073126</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Fighter Jet</td>\n","      <td>882594</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Jet Fighter Bomber</td>\n","      <td>451385</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Attack Aircraft</td>\n","      <td>315246</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Light ground-attack aircraft</td>\n","      <td>267457</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Fighter bomber jet</td>\n","      <td>242231</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Military Transport aircraft</td>\n","      <td>228426</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Utility Helicopter</td>\n","      <td>146653</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Strategic bomber</td>\n","      <td>99100</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Tactical Bomber</td>\n","      <td>82219</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Observation Aircraft</td>\n","      <td>81820</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Fixed wing ground attack gunship</td>\n","      <td>75058</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Ground attack aircraft</td>\n","      <td>73843</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Carrier-based Fighter Jet</td>\n","      <td>58691</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Training Aircraft</td>\n","      <td>48435</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Light fighter</td>\n","      <td>39999</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Light Bomber</td>\n","      <td>39262</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Light Tactical Bomber</td>\n","      <td>34738</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Light Utility Plane</td>\n","      <td>28582</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Observation/ Light Attack Aircraft</td>\n","      <td>24491</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Airborne early warning and control</td>\n","      <td>17226</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>Rescue Helicopter</td>\n","      <td>10331</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Fighter jet</td>\n","      <td>10322</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Transport Helicopter</td>\n","      <td>9289</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>Aerial refuelling aircraft</td>\n","      <td>8266</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>Photographic reconnaissance plane</td>\n","      <td>7800</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Heavy-lift Helicopter</td>\n","      <td>6903</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>Heavy attack aircraft</td>\n","      <td>6450</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Rescue Aircraft</td>\n","      <td>6062</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>Utility Aircraft</td>\n","      <td>5782</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>Heavy-lift cargo helicopter</td>\n","      <td>5587</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>Strategic Bomber</td>\n","      <td>4633</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>Fighter Prop Plane</td>\n","      <td>3882</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>Cargo Helicopter</td>\n","      <td>2571</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>Close -Support Helicopter</td>\n","      <td>2174</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>Carrier-based Early Warning aircraft</td>\n","      <td>1498</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>Early Warning aircraft</td>\n","      <td>1380</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>Helicopter</td>\n","      <td>1292</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>Weather reconnaissance aircraft</td>\n","      <td>1223</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>Transport</td>\n","      <td>1021</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>Close air support prop gunship</td>\n","      <td>921</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>Search and Rescue Helicopter</td>\n","      <td>875</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>Reconnaissance Aircraft</td>\n","      <td>752</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>Airliner/transport aircraft</td>\n","      <td>397</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>Primary Pilot Trainer</td>\n","      <td>229</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>Signals Intelligence</td>\n","      <td>203</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>Cargo Prop plane</td>\n","      <td>176</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>Transport Prop Plane</td>\n","      <td>43</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>Bomber Jet</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>Transport Aircraft</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>Utility Prop plane</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>Heavy strategic bomber</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>Carrier-base all-weather night Fighter Jet</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>Airliner/ Transport</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>54</th>\n","      <td>Medium Transport</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>55</th>\n","      <td>Light Utility Helicopter</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e8cc60cd-609f-4d48-8c63-a568087d3a43')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e8cc60cd-609f-4d48-8c63-a568087d3a43 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e8cc60cd-609f-4d48-8c63-a568087d3a43');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9f8f9ce5-ca09-4b53-8d4a-198478cb5030\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9f8f9ce5-ca09-4b53-8d4a-198478cb5030')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9f8f9ce5-ca09-4b53-8d4a-198478cb5030 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"aircraft_type_missions\",\n  \"rows\": 56,\n  \"fields\": [\n    {\n      \"column\": \"AirCraftType\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 56,\n        \"samples\": [\n          \"Fighter Jet Bomber\",\n          \"Fighter bomber jet\",\n          \"Cargo Helicopter\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MissionsCount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 197119,\n        \"min\": 1,\n        \"max\": 1073126,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          24491,\n          875,\n          43\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":53}],"source":["Bombing_Operations.registerTempTable(\"Bombing_Operations\")\n","Aircraft_Glossary.registerTempTable(\"Aircraft_Glossary\")\n","\n","query = \"\"\"\n","SELECT AirCraftType, count(*) MissionsCount\n","FROM Bombing_Operations bo\n","JOIN Aircraft_Glossary ag\n","ON bo.AirCraft = ag.AirCraft\n","GROUP BY AirCraftType\n","ORDER BY MissionsCount DESC\n","\"\"\"\n","\n","aircraft_type_missions = spark.sql(query)\n","aircraft_type_missions.toPandas()\n"]},{"cell_type":"markdown","metadata":{"id":"ffrW-oV2SahW"},"source":["The aircrafts of type `Fighter Jet Bomber` participated in most of the missions in the Vietnam war.\n","\n","Note: This dataset would require further cleaning and normalization. See `Fighter Jet Bomber`, `Jet Fighter Bomber`, `Fighter bomber jet`"]},{"cell_type":"markdown","source":["## Questions 5: What types of missions were carried out during the Vietnam war (for each category produce the number of missions)?\n","\n","This is a question that requires you to interpret the data. There is no explicit column about the type of mission in the dataset. One way to answer the question is to look at the aircraft type or whether there was any weapon loaded during the mission, and draw conclusions about the type of mission. Produce three to five categories."],"metadata":{"id":"zH8wZpQUwvqf"}},{"cell_type":"code","source":["# your code here\n","# Add by Hui Lin 02/13/2025 for the question 1 of Assignment 02.\n","\n","# STEP 01: Let's take a look which attributes we got from the join table.\n","missions_joined.columns\n","#type(missions_joined)"],"metadata":{"id":"qDMWL3Uy0kl8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739509913367,"user_tz":480,"elapsed":159,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"16f19dc3-c4fe-48b6-8eee-d8a9e8f63a09"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['AirCraft',\n"," 'ContryFlyingMission',\n"," 'MissionDate',\n"," 'OperationSupported',\n"," 'PeriodOfDay',\n"," 'TakeoffLocation',\n"," 'TargetCountry',\n"," 'TimeOnTarget',\n"," 'WeaponType',\n"," 'WeaponsLoadedWeight',\n"," 'AirCraft',\n"," 'AirCraftName',\n"," 'AirCraftType']"]},"metadata":{},"execution_count":58}]},{"cell_type":"markdown","source":["According to the hints of Question 5,\n","I am going to use \"AirCraftType\" and \"WeaponType\" to define mission's type."],"metadata":{"id":"rfkZdlkL7F3j"}},{"cell_type":"code","source":["# STEP 02: select the real attack records for further analazy.\n","attack_missions = missions_joined.filter((col(\"WeaponsLoadedWeight\").isNotNull())\\\n","                                         &(col(\"WeaponsLoadedWeight\")!= 0))\n","attack_missions.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wwZDG-nl3wFX","executionInfo":{"status":"ok","timestamp":1739511212211,"user_tz":480,"elapsed":593,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"6f45ee7d-4cf2-46d1-dc35-cae59616eb84"},"execution_count":68,"outputs":[{"output_type":"stream","name":"stdout","text":["+--------+--------------------+-----------+------------------+-----------+---------------+-------------+------------+--------------------+-------------------+--------+--------------------+--------------------+\n","|AirCraft| ContryFlyingMission|MissionDate|OperationSupported|PeriodOfDay|TakeoffLocation|TargetCountry|TimeOnTarget|          WeaponType|WeaponsLoadedWeight|AirCraft|        AirCraftName|        AirCraftType|\n","+--------+--------------------+-----------+------------------+-----------+---------------+-------------+------------+--------------------+-------------------+--------+--------------------+--------------------+\n","|     A-1|UNITED STATES OF ...| 1970-02-02|              NULL|          N|  NAKHON PHANOM|         LAOS|      1415.0|BLU27 FIRE BOMB (...|              17400|     A-1|Douglas A-1 Skyra...|         Fighter Jet|\n","|     F-4|UNITED STATES OF ...| 1970-11-25|              NULL|          D|        UBON AB|         LAOS|       650.0|MK 82 GP BOMB (50...|              31860|     F-4|McDonnell Douglas...|  Fighter Jet Bomber|\n","|     A-6|UNITED STATES OF ...| 1971-05-12|              NULL|          N|    TONKIN GULF|         LAOS|      1304.0|CBU24 AN PR/MT (B...|              33200|     A-6|Grumman A-6 Intruder|     Attack Aircraft|\n","|   AC-47|     VIETNAM (SOUTH)| 1971-09-20|              NULL|          N|      BINH THUY|SOUTH VIETNAM|      1315.0|                NULL|               7200|   AC-47|Douglas AC-47 Spooky|Ground attack air...|\n","|     F-4|UNITED STATES OF ...| 1972-04-26|              NULL|          D|         DANANG|SOUTH VIETNAM|       945.0|                NULL|              58410|     F-4|McDonnell Douglas...|  Fighter Jet Bomber|\n","|     A-7|UNITED STATES OF ...| 1972-08-24|              NULL|          N|    TONKIN GULF|NORTH VIETNAM|      1355.0|                NULL|              21240|     A-7|  LTV A-7 Corsair II|     Attack Aircraft|\n","|  AC-130|UNITED STATES OF ...| 1971-10-05|              NULL|          D|        UBON AB|     CAMBODIA|       140.0|                NULL|               2850|  AC-130|Lockheed AC-130 S...|Fixed wing ground...|\n","|    A-37|UNITED STATES OF ...| 1971-12-13|              NULL|          D|       BIEN HOA|     CAMBODIA|       318.0|  LAU68 RKT LCHR (7)|               8440|    A-37|Cessna A-37 Drago...|Light ground-atta...|\n","|     F-4|UNITED STATES OF ...| 1972-01-01|              NULL|          D|         DANANG|         LAOS|       215.0|                NULL|              20520|     F-4|McDonnell Douglas...|  Fighter Jet Bomber|\n","|     F-4|UNITED STATES OF ...| 1970-10-27|              NULL|          D|        PHU CAT|SOUTH VIETNAM|       812.0| MK 82 GP BOMB (500)|               5310|     F-4|McDonnell Douglas...|  Fighter Jet Bomber|\n","|    A-37|     VIETNAM (SOUTH)| 1971-02-08|              NULL|          D|      BINH THUY|SOUTH VIETNAM|      1518.0|                NULL|              63720|    A-37|Cessna A-37 Drago...|Light ground-atta...|\n","|   F-105|UNITED STATES OF ...| 1970-10-02|              NULL|          D|         TAKHLI|         LAOS|      1002.0|                NULL|             196800|   F-105|Republic F-105 Th...|  Fighter Jet Bomber|\n","|     F-4|UNITED STATES OF ...| 1971-06-23|              NULL|          D|        UBON AB|         LAOS|       820.0|                NULL|              61560|     F-4|McDonnell Douglas...|  Fighter Jet Bomber|\n","|     A-7|UNITED STATES OF ...| 1972-06-20|              NULL|          N|    TONKIN GULF|NORTH VIETNAM|      1830.0|                NULL|              53100|     A-7|  LTV A-7 Corsair II|     Attack Aircraft|\n","|     F-4|UNITED STATES OF ...| 1972-05-26|              NULL|          N|        UBON AB|SOUTH VIETNAM|      2150.0|                NULL|              24900|     F-4|McDonnell Douglas...|  Fighter Jet Bomber|\n","|    B-52|UNITED STATES OF ...| 1972-02-21|              NULL|          N|        U TAPAO|         LAOS|      1925.0|                NULL|             382320|    B-52| B-52 Stratofortress|    Strategic bomber|\n","|    A-37|UNITED STATES OF ...| 1972-08-03|              NULL|          D|       BIEN HOA|SOUTH VIETNAM|       515.0|                NULL|              42480|    A-37|Cessna A-37 Drago...|Light ground-atta...|\n","|     A-7|UNITED STATES OF ...| 1973-05-06|              NULL|          D|          KORAT|     CAMBODIA|       955.0|                NULL|              63720|     A-7|  LTV A-7 Corsair II|     Attack Aircraft|\n","|     A-1|     VIETNAM (SOUTH)| 1972-04-29|              NULL|          D|       BIEN HOA|SOUTH VIETNAM|       700.0|                NULL|              84960|     A-1|Douglas A-1 Skyra...|         Fighter Jet|\n","|    A-37|UNITED STATES OF ...| 1972-08-09|              NULL|          D|       BIEN HOA|SOUTH VIETNAM|       510.0|  MK81 GP BOMB (250)|              10400|    A-37|Cessna A-37 Drago...|Light ground-atta...|\n","+--------+--------------------+-----------+------------------+-----------+---------------+-------------+------------+--------------------+-------------------+--------+--------------------+--------------------+\n","only showing top 20 rows\n","\n"]}]},{"cell_type":"code","source":["# STEP 03: Group by aircraft type and weapon type, count the number of attacks\n","attack_by_type = attack_missions.groupBy(\"AirCraftType\", \"WeaponType\").agg(count(\"*\").alias(\"AttackCount\")).sort(desc(\"AttackCount\"))\n","attack_by_type.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8zMh75lP5Ipy","executionInfo":{"status":"ok","timestamp":1739513062662,"user_tz":480,"elapsed":1135,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"f7824ab8-472e-446d-d4ac-e11cf199f355"},"execution_count":81,"outputs":[{"output_type":"stream","name":"stdout","text":["+--------------------+--------------+-----------+\n","|        AirCraftType|    WeaponType|AttackCount|\n","+--------------------+--------------+-----------+\n","|  Fighter Jet Bomber|          NULL|     307509|\n","|         Fighter Jet|          NULL|     288440|\n","|  Fighter bomber jet|          NULL|     195830|\n","|  Fighter Jet Bomber|500LB GP MK-82|     129917|\n","|     Attack Aircraft|          NULL|     110795|\n","|  Jet Fighter Bomber|          M-39|     104858|\n","|         Fighter Jet|500LB GP MK-82|     101281|\n","|  Jet Fighter Bomber|          NULL|      88244|\n","|Light ground-atta...|          NULL|      75182|\n","|  Jet Fighter Bomber|500LB GP MK-82|      68627|\n","|  Fighter Jet Bomber|750LB GP M-117|      62070|\n","|  Jet Fighter Bomber|750LB BLU-1/27|      59905|\n","|     Attack Aircraft|500LB GP MK-82|      58292|\n","|         Fighter Jet|   MK-11/MK-12|      55315|\n","|  Fighter Jet Bomber|          M-61|      53232|\n","|  Jet Fighter Bomber|750LB GP M-117|      52423|\n","|         Fighter Jet|   250LB MK-81|      49658|\n","|  Fighter Jet Bomber|     CBU-24/29|      44904|\n","|Military Transpor...|          NULL|      34635|\n","|         Fighter Jet|500BLU11/23/32|      34332|\n","+--------------------+--------------+-----------+\n","only showing top 20 rows\n","\n"]}]},{"cell_type":"code","source":["# Cache and recount\n","attack_by_type.cache()\n","\n","%time attack_by_type.count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Lj_BAnGp91li","executionInfo":{"status":"ok","timestamp":1739513079966,"user_tz":480,"elapsed":5205,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"c23d0a40-809f-41ca-9b5d-969269968a2d"},"execution_count":82,"outputs":[{"output_type":"stream","name":"stdout","text":["CPU times: user 24.2 ms, sys: 4.91 ms, total: 29.1 ms\n","Wall time: 5.02 s\n"]},{"output_type":"execute_result","data":{"text/plain":["1470"]},"metadata":{},"execution_count":82}]},{"cell_type":"code","source":["# after cache\n","%time attack_by_type.count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cAbJvMkf-kEH","executionInfo":{"status":"ok","timestamp":1739513084609,"user_tz":480,"elapsed":980,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"684c5b56-ad0c-413a-ac62-4d9b2fd2de54"},"execution_count":83,"outputs":[{"output_type":"stream","name":"stdout","text":["CPU times: user 5.61 ms, sys: 887 µs, total: 6.49 ms\n","Wall time: 873 ms\n"]},{"output_type":"execute_result","data":{"text/plain":["1470"]},"metadata":{},"execution_count":83}]},{"cell_type":"code","source":["# another method for question 5.\n","missions_joined.registerTempTable(\"Missions_Joined\")\n","\n","query = \"\"\"\n","SELECT AirCraftType, WeaponType, COUNT(*) AS AttackCount\n","FROM Missions_Joined\n","WHERE WeaponsLoadedWeight IS NOT NULL AND WeaponsLoadedWeight != 0\n","GROUP BY AirCraftType, WeaponType\n","ORDER BY AttackCount DESC\n","\"\"\"\n","\n","attack_by_type2 = spark.sql(query)\n","attack_by_type2.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6td0VsTK_bbN","executionInfo":{"status":"ok","timestamp":1739513088451,"user_tz":480,"elapsed":313,"user":{"displayName":"林辉","userId":"00815086233424508369"}},"outputId":"6b55222c-556b-4735-deba-c456aeaefad3"},"execution_count":84,"outputs":[{"output_type":"stream","name":"stdout","text":["+--------------------+--------------+-----------+\n","|        AirCraftType|    WeaponType|AttackCount|\n","+--------------------+--------------+-----------+\n","|  Fighter Jet Bomber|          NULL|     307509|\n","|         Fighter Jet|          NULL|     288440|\n","|  Fighter bomber jet|          NULL|     195830|\n","|  Fighter Jet Bomber|500LB GP MK-82|     129917|\n","|     Attack Aircraft|          NULL|     110795|\n","|  Jet Fighter Bomber|          M-39|     104858|\n","|         Fighter Jet|500LB GP MK-82|     101281|\n","|  Jet Fighter Bomber|          NULL|      88244|\n","|Light ground-atta...|          NULL|      75182|\n","|  Jet Fighter Bomber|500LB GP MK-82|      68627|\n","|  Fighter Jet Bomber|750LB GP M-117|      62070|\n","|  Jet Fighter Bomber|750LB BLU-1/27|      59905|\n","|     Attack Aircraft|500LB GP MK-82|      58292|\n","|         Fighter Jet|   MK-11/MK-12|      55315|\n","|  Fighter Jet Bomber|          M-61|      53232|\n","|  Jet Fighter Bomber|750LB GP M-117|      52423|\n","|         Fighter Jet|   250LB MK-81|      49658|\n","|  Fighter Jet Bomber|     CBU-24/29|      44904|\n","|Military Transpor...|          NULL|      34635|\n","|         Fighter Jet|500BLU11/23/32|      34332|\n","+--------------------+--------------+-----------+\n","only showing top 20 rows\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/pyspark/sql/dataframe.py:329: FutureWarning: Deprecated in 2.0, use createOrReplaceTempView instead.\n","  warnings.warn(\"Deprecated in 2.0, use createOrReplaceTempView instead.\", FutureWarning)\n"]}]}],"metadata":{"colab":{"machine_shape":"hm","provenance":[{"file_id":"1MZp-GXt0pgkrMwwp-3o4UhfbdueiccGg","timestamp":1739054122000},{"file_id":"1gc6u6hItUKY9uJt6GXHaneSYCMaGcxp1","timestamp":1656980784217},{"file_id":"1CqWY4pk7_VFxi8K8v4asr18ed0Hs8FVA","timestamp":1578441204356}]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.3"}},"nbformat":4,"nbformat_minor":0}